name: Deploy Front (zip with node_modules)

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  BUCKET: trynic-front-git
  APP_NAME: trynic-front
  GROUP_NAME: trynic-front-group

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 소스 checkout & Node 준비
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # 2) .env.production 생성
      - name: Create env
        run: |
          cat <<EOF > .env.production
          NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}
          FAL_KEY=${{ secrets.FAL_KEY }}
          GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
          EOF

      # 3) 의존성 설치 & 프로덕션 빌드
      - run: npm ci            # devDependencies도 그대로 설치
      - run: npm run build -- --no-lint

      # 4) 배포용 zip 만들기 (node_modules 포함)
      - name: Make bundle
        run: |
          zip -r trynic-front.zip \
            .next public node_modules package.json package-lock.json \
            next.config.* .env.production \
            codedeploy appspec.yml

      # 5) AWS 자격 설정
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      # 6) S3 업로드 → CodeDeploy 트리거
      - run: aws s3 cp trynic-front.zip s3://$BUCKET/trynic-front.zip
      - run: |
          aws deploy create-deployment \
            --application-name $APP_NAME \
            --deployment-group-name $GROUP_NAME \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --s3-location bucket=$BUCKET,key=trynic-front.zip,bundleType=zip
