name: Deploy Front (Next.js → CodeDeploy)

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: ap-northeast-2
  BUCKET: trynic-front-git
  APP_NAME: trynic-front
  GROUP_NAME: trynic-front-group

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) 체크아웃
      - uses: actions/checkout@v4

      # 2) Node 세팅
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      # 3) 환경파일 생성
      - name: Create .env.production
        run: |
          echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}"  > .env.production
          echo "FAL_KEY=${{ secrets.FAL_KEY }}"                            >> .env.production
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}"              >> .env.production

      # 4) 의존성 설치 + 프로덕션 빌드
      - run: npm ci
      - run: npm run build

      # 5) devDependencies 제거 & node_modules 축소
      - run: npm prune --omit=dev

      # 6) 배포용 zip 구성
      - name: Zip bundle
        run: |
          zip -r trynic-front.zip \
            .next public package.json package-lock.json next.config.js \
            .env.production codedeploy appspec.yml node_modules

      # 7) AWS 자격 증명
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      # 8) S3 업로드
      - run: aws s3 cp trynic-front.zip s3://$BUCKET/trynic-front.zip

      # 9) CodeDeploy 트리거
      - run: |
          aws deploy create-deployment \
            --application-name $APP_NAME \
            --deployment-group-name $GROUP_NAME \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --s3-location bucket=$BUCKET,key=trynic-front.zip,bundleType=zip
